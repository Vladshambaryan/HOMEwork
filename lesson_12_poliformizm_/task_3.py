class Robot:
    def __init__(self):
        self.a = "Robot_a"           # Публичный атрибут
        self._b = "Robot_b"          # Защищенный атрибут
        self.__c = "Robot_c"         # Приватный атрибут

# Создаем экземпляр класса Robot
obj = Robot()

# Выводим значение публичного атрибута a
print(obj.a)  # Это будет работать, так как атрибут публичный

# Выводим значение защищенного атрибута _b
print(obj._b)  # Это будет работать, но доступ к защищенному атрибуту обычно нежелателен вне класса

# Выводим значение приватного атрибута __c
# Приватные атрибуты можно читать с использованием "манглинга" имен (добавление _ClassName перед атрибутом)
print(obj._Robot__c)  # Это будет работать благодаря name mangling

# Пытаемся вывести значение приватного атрибута __c напрямую (это вызовет ошибку)
# print(obj._c)  # Это вызовет AttributeError, так как __c приватный атрибут и доступен только внутри класса
